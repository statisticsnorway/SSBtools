% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_aggregate.R
\name{model_aggregate}
\alias{model_aggregate}
\title{Hierarchical aggregation via model specification}
\usage{
model_aggregate(
  data,
  sum_vars,
  fun_vars,
  fun = sum,
  hierarchies = NULL,
  formula = NULL,
  dim_var = NULL,
  char_var = NULL,
  pre_aggregate = TRUE,
  list_return = FALSE,
  pre_return = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{A data frame containing data to be aggregated}

\item{sum_vars}{Variables to be summed. This will be done via matrix multiplication.}

\item{fun_vars}{Variables to be aggregated by supplied functions.
This will be done via \code{\link{aggregate_multiple_fun}} and \code{\link{dummy_aggregate}} and
\code{fun_vars} is specified as the parameter \code{vars}.}

\item{fun}{The \code{fun}         parameter to \code{\link{aggregate_multiple_fun}}}

\item{hierarchies}{The \code{hierarchies} parameter to \code{\link{ModelMatrix}}}

\item{formula}{The \code{formula}     parameter to \code{\link{ModelMatrix}}}

\item{dim_var}{The \code{dimVar}      parameter to \code{\link{ModelMatrix}}}

\item{char_var}{Extra variables to be used as grouping elements in the pre-aggregate step}

\item{pre_aggregate}{Whether to pre-aggregate data to reduce the dimension of the model matrix.
Note that all original \code{fun_vars} observations are retained in the aggregated dataset and \code{pre_aggregate} does not affect the final result.}

\item{list_return}{Whether to return a list of separate components including the model matrix \code{x}.}

\item{pre_return}{Whether to return the pre-aggregate data as a two-component list.}

\item{verbose}{Whether to print information during calculations.}

\item{...}{Further arguments passed to \code{dummy_aggregate}.}
}
\value{
A data frame or a list.
}
\description{
Internally a dummy/model matrix is created according to the model specification.
This model matrix is used in the aggregation process via matrix multiplication and/or the function \code{\link{aggregate_multiple_fun}}.
}
\examples{
z <- SSBtoolsData("sprt_emp_withEU")
z$age[z$age == "Y15-29"] <- "young"
z$age[z$age == "Y30-64"] <- "old"
names(z)[names(z) == "ths_per"] <- "ths"
z$y <- 1:18

my_range <- function(x) c(min = min(x), max = max(x))

out <- model_aggregate(z, 
   formula = ~age:year + geo, 
   sum_vars = c("y", "ths"), 
   fun_vars = c(sum = "ths", mean = "y", med = "y", ra = "ths"), 
   fun = c(sum = sum, mean = mean, med = median, ra = my_range))

out
}
